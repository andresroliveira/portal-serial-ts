// Exemplo de uso do sistema de eventos serial
import { SerialManager } from "./serialManager.js";
import { getSerialState, globalSerialState } from "./serialState.js";

// Criar inst√¢ncia do serial manager
const serial = new SerialManager();

// EXATAMENTE O QUE VOC√ä QUERIA! üéØ
serial.on("data", (data: string) => {
    console.log("üì° Dados recebidos:", data);

    // Acessar estado global
    console.log("Estado atual:", getSerialState());
    console.log("√öltimo dado:", globalSerialState.lastData);
    console.log("Total de bytes:", globalSerialState.totalBytesReceived);
});

// Outros eventos dispon√≠veis
serial.on("connected", (port: any) => {
    console.log("üîó Conectado √† porta:", port);
});

serial.on("disconnected", () => {
    console.log("‚ùå Desconectado");
});

serial.on("error", (error: any) => {
    console.error("‚ö†Ô∏è Erro:", error);
});

// Usar o serial
async function exemploUso() {
    try {
        // Conectar (abre di√°logo para usu√°rio selecionar porta)
        const port = await serial.requestAndConnect();

        // A partir daqui, qualquer dado que chegar dispara o evento "data"
        // Voc√™ n√£o precisa fazer loop infinito ou polling!
    } catch (error) {
        console.error("Erro ao conectar:", error);
    }
}

export { serial, exemploUso };
